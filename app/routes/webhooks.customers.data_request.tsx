import type { ActionFunctionArgs } from "@remix-run/node";
import { authenticate } from "../shopify.server";
import { DataService } from "../utils/data-service";

export const action = async ({ request }: ActionFunctionArgs) => {
  await authenticate.webhook(request);
  const dataService = DataService.getInstance();

  try {
    // Parser le payload du webhook
    const payload = await request.json();
    console.log("üìã Payload customers/data_request:", payload);

    const { customer_id, shop_id } = payload;

    if (!customer_id || !shop_id) {
      console.error("‚ùå Donn√©es manquantes dans le payload");
      return new Response("Donn√©es manquantes", { status: 400 });
    }

    // G√©n√©rer le rapport GDPR
    const gdprReport = await dataService.generateGDPRReport(customer_id, shop_id);

    if (!gdprReport) {
      console.log(`‚ÑπÔ∏è Aucune donn√©e trouv√©e pour le client ${customer_id}`);
      return new Response("Aucune donn√©e trouv√©e", { status: 200 });
    }

    // TODO: Envoyer le rapport au propri√©taire de la boutique
    // Pour l'instant, on le log
    console.log("üìä Rapport GDPR g√©n√©r√©:", JSON.stringify(gdprReport, null, 2));

    // Ici tu pourrais :
    // - Envoyer un email au propri√©taire de la boutique
    // - Cr√©er un fichier t√©l√©chargeable
    // - Stocker temporairement le rapport pour t√©l√©chargement

    return new Response("Rapport g√©n√©r√© avec succ√®s", { status: 200 });

  } catch (error) {
    console.error("‚ùå Erreur lors du traitement customers/data_request:", error);
    return new Response("Erreur interne", { status: 500 });
  }
}; 